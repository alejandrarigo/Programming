

Variáveis em SQL

só pode ser decimal, string ou varchar. Uma result table não pode ser uma variável. 

-------------------------------------

# DECLARE @nome_var1 AS Tipo_var, @nome_var2 AS Tipo_var;

Quando uma variável é iniciazada é NULL




--------------------------------------
# Isso aqui da um valor para uma variável:

SET @nome_var = valor


----------------------------------

Os select que só devolvem um número podem ser armazenados numa variável:

DECLARE @product_count INT;

SET @product_count = (
    SELECT 
        COUNT(*) 
    FROM 
        production.products 
);

SELECT @product_count;

ou fazer um print:

PRINT 'The number of products is ' + CAST(@product_count AS VARCHAR(MAX));

Esse + é de concatenar
------------------------------------------------------------------------

To hide the number of rows affected messages, you use the following statement:

SET NOCOUNT ON;   

_____________________________________________________

GUARDANDO O VALOR DE UM SELECT em variáveis.
primeiro declaramos as variáveis.

DECLARE 
    @product_name VARCHAR(MAX),
    @list_price DECIMAL(10,2);

SELECT 
    @product_name = product_name,
    @list_price = list_price
FROM
    production.products
WHERE
    product_id = 100;  
#Esse where mostra que é uma linha só. 

--------------------------------------------
por exemplo, aqui esse CHAR() é uma função que recebe um número e devolve o ASCII correspondente a esse número. CHAR(10) é pular de linha


@product_list = @product_list + product_name 
                        + CHAR(10)

------------------------------------

Note that the @@ROWCOUNT is a system variable that returns the number of rows affected by the last previous statement.

----------------------------------------